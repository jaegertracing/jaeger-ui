// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JaegerUIApp does not explode 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <HistoryProvider
    history={
      Object {
        "action": "POP",
        "back": [Function],
        "block": [Function],
        "createHref": [Function],
        "forward": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "listenObject": false,
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "back": [Function],
          "block": [Function],
          "createHref": [Function],
          "forward": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "listenObject": false,
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(WithRouteProps)>
        <Switch>
          <Route
            path="/search"
          >
            <Connect(SearchTracePageImpl) />
          </Route>
          <Route
            path="/trace/:a?\\\\.\\\\.\\\\.:b?"
          >
            <WithRouteProps />
          </Route>
          <Route
            path="/trace/:id"
          >
            <WithRouteProps />
          </Route>
          <Route
            path="/dependencies"
          >
            <Connect(DependencyGraphPageImpl) />
          </Route>
          <Route
            path="/deep-dependencies"
          >
            <Connect(DeepDependencyGraphPageImpl) />
          </Route>
          <Route
            path="/quality-metrics"
          >
            <Connect(UnconnectedQualityMetrics) />
          </Route>
          <Route
            path="/monitor"
          >
            <MonitorATMPage />
          </Route>
          <Route
            exact={true}
            path="/"
            render={[Function]}
          />
          <Route
            exact={true}
            path=""
            render={[Function]}
          />
          <Route
            exact={true}
            path="/"
            render={[Function]}
          />
          <Route>
            <NotFound />
          </Route>
        </Switch>
      </Connect(WithRouteProps)>
    </Router>
  </HistoryProvider>
</Provider>
`;
