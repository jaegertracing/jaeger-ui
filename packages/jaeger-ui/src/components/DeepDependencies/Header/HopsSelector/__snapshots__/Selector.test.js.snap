// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Selector renders buttons with expected text and classNames 1`] = `
<Popover
  arrowPointAtCenter={true}
  content={
    Array [
      <button
        className="HopsSelector--Selector--decrement"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        -
      </button>,
      <React.Fragment>
        <button
          className="HopsSelector--Selector--btn is-full HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          0
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-partial"
        />
        <button
          className="HopsSelector--Selector--btn is-partial HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          1
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-full"
        />
        <button
          className="HopsSelector--Selector--btn is-full HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          2
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-empty"
        />
        <button
          className="HopsSelector--Selector--btn is-empty HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          3
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-empty"
        />
        <button
          className="HopsSelector--Selector--btn is-empty HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          4
        </button>
      </React.Fragment>,
      <button
        className="HopsSelector--Selector--increment"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        +
      </button>,
    ]
  }
  mouseEnterDelay={0.1}
  mouseLeaveDelay={0.1}
  overlayStyle={Object {}}
  placement="bottom"
  title="Visible downstream hops"
  transitionName="zoom-big"
  trigger="hover"
>
  <span
    className="HopsSelector--Selector"
  >
    <FaSortAmountAsc
      className="HopsSelector--Selector--AscIcon is-Down"
    />
    Downstream hops
    <button
      className="HopsSelector--Selector--btn is-full HopsSelector--Selector--furthest"
      onClick={[Function]}
      type="button"
    >
      2
    </button>
    <span
      className="HopsSelector--Selector--delimiter"
    >
      /
    </span>
    <button
      className="HopsSelector--Selector--btn is-empty HopsSelector--Selector--delimiter"
      onClick={[Function]}
      type="button"
    >
      4
    </button>
    <Memo(ChevronDown)
      className="ub-ml1"
    />
  </span>
</Popover>
`;

exports[`Selector renders message when there are no options 1`] = `
<span
  className="HopsSelector--Selector"
>
  No 
  upstream hops
</span>
`;

exports[`Selector renders upstream hops with negative distance correctly 1`] = `
<Popover
  arrowPointAtCenter={true}
  content={
    Array [
      <button
        className="HopsSelector--Selector--decrement"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        -
      </button>,
      <React.Fragment>
        <button
          className="HopsSelector--Selector--btn is-full HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          0
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-partial"
        />
        <button
          className="HopsSelector--Selector--btn is-partial HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          1
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-full"
        />
        <button
          className="HopsSelector--Selector--btn is-full HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          2
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-empty"
        />
        <button
          className="HopsSelector--Selector--btn is-empty HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          3
        </button>
      </React.Fragment>,
      <React.Fragment>
        <IoChevronRight
          className="HopsSelector--Selector--ChevronRight is-empty"
        />
        <button
          className="HopsSelector--Selector--btn is-empty HopsSelector--Selector--popover-content"
          onClick={[Function]}
          type="button"
        >
          4
        </button>
      </React.Fragment>,
      <button
        className="HopsSelector--Selector--increment"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        +
      </button>,
    ]
  }
  mouseEnterDelay={0.1}
  mouseLeaveDelay={0.1}
  overlayStyle={Object {}}
  placement="bottom"
  title="Visible upstream hops"
  transitionName="zoom-big"
  trigger="hover"
>
  <span
    className="HopsSelector--Selector"
  >
    <FaSortAmountAsc
      className="HopsSelector--Selector--AscIcon is-Up"
    />
    Upstream hops
    <button
      className="HopsSelector--Selector--btn is-full HopsSelector--Selector--furthest"
      onClick={[Function]}
      type="button"
    >
      2
    </button>
    <span
      className="HopsSelector--Selector--delimiter"
    >
      /
    </span>
    <button
      className="HopsSelector--Selector--btn is-empty HopsSelector--Selector--delimiter"
      onClick={[Function]}
      type="button"
    >
      4
    </button>
    <Memo(ChevronDown)
      className="ub-ml1"
    />
  </span>
</Popover>
`;
